openapi: 3.0.1
info:
  title: "Proter Server"
  description: "An API for running Flow-based simulations in Proter."
  version: '0.8'
  contact: 
    name: "Proter"
    url: "http://docs.workflowfm.com/proter"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8080
    description: "Typical localhost test server"
paths:
  /simulate:
    post:
      description: "Perform a simulation and obtain measured metrics."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IRequest'
            examples:
              '0':
                value: |-
                  {
                    "arrivals" : [
                      {
                        "name" : "Example1",
                        "flow" : {
                          "IThen" : {  
                            "args": [
                            {
                              "ITask" : {
                                "name" : "T1",
                                "duration" : {
                                  "IConstant" : {
                                    "value" : 5.0
                                  }
                                },
                                "cost" : {
                                  "IConstant" : {
                                    "value" : 2.0
                                  }
                                },
                                "resources" : [
                                {
                                  "resource": "Resource",
                                  "quantity": 1
                                }
                                ],
                                "priority" : 0
                              }
                            },
                            {
                              "ITask" : {
                                "name" : "T2",
                                "duration" : {
                                  "IConstant" : {
                                    "value" : 1.0
                                  }
                                },
                                "cost" : {
                                  "IConstant" : {
                                    "value" : 3.0
                                  }
                                },
                                "resources" : [
                                ],
                                "priority" : 0
                              }
                            }
                            ]       
                          }
                        },
                        "rate" : {
                          "IConstant" : {
                            "value" : 1.0
                          }
                        },
                        "limit" : 3
                      }
                    ],
                    "resources" : [
                    {
                      "name": "Resource",
                      "capacity": 2,
                      "costPerTick": 1.0
                    }
                    ]
                  } 
      responses:
        '200':
          description: "Resulting simulation metrics"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics'
              examples:
                '0': 
                  value: |-
                    {"startTime":1659355815687,"endTime":1659355815744,"startTicks":0,"endTicks":11,"tasks":[{"id":"baf4ebff-5338-472e-b2d6-9fad1a41e71f","task":"T1","caseName":"Example1#3","priority":0,"created":2,"started":5,"duration":5,"cost":7.0,"resources":{"Resource":1},"aborted":false},{"id":"a922a37e-f03f-4445-9ef1-da7bbaf46150","task":"T2","caseName":"Example1#1","priority":0,"created":5,"started":5,"duration":1,"cost":3.0,"resources":{},"aborted":false},{"id":"0cb717df-8808-4ea0-8539-3b04cd0d970f","task":"T2","caseName":"Example1#2","priority":0,"created":6,"started":6,"duration":1,"cost":3.0,"resources":{},"aborted":false},{"id":"c40a5714-f95c-423d-a60d-71a58d55350c","task":"T1","caseName":"Example1#1","priority":0,"created":0,"started":0,"duration":5,"cost":7.0,"resources":{"Resource":1},"aborted":false},{"id":"6a8cc9a6-2196-4b23-9169-3268982e5f62","task":"T2","caseName":"Example1#3","priority":0,"created":10,"started":10,"duration":1,"cost":3.0,"resources":{},"aborted":false},{"id":"a88f379a-d4c1-41c0-a397-78c62212c438","task":"T1","caseName":"Example1#2","priority":0,"created":1,"started":1,"duration":5,"cost":7.0,"resources":{"Resource":1},"aborted":false}],"cases":[{"name":"Example1#1","started":0,"duration":6,"delay":0,"tasks":2,"cost":10.0,"result":"()"},{"name":"Example1#2","started":1,"duration":6,"delay":0,"tasks":2,"cost":10.0,"result":"()"},{"name":"Example1#3","started":2,"duration":9,"delay":3,"tasks":2,"cost":10.0,"result":"()"}],"resources":[{"name":"Resource","capacity":2,"costPerTick":1.0,"idleUpdate":11,"load":0,"busyTime":15,"idleTime":7,"tasks":3,"cost":15.0}],"errors":[]}
        '422':
          description: "Unpocessable Entity - Error in requested scenario"
          content:
            application/json:
              schema:
                type: string
                example: "Flow resources cannot be matched to the resource list."
  /stream:
    post:
      description: "Perform a simulation and obtain simulation events in chunks."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IRequest'
            examples:
              '0':
                value: |-
                  {
                    "arrivals" : [
                      {
                        "name" : "Example1",
                        "flow" : {
                          "IThen" : {  
                            "args": [
                            {
                              "ITask" : {
                                "name" : "T1",
                                "duration" : {
                                  "IConstant" : {
                                    "value" : 5.0
                                  }
                                },
                                "cost" : {
                                  "IConstant" : {
                                    "value" : 2.0
                                  }
                                },
                                "resources" : [
                                {
                                  "resource": "Resource",
                                  "quantity": 1
                                }
                                ],
                                "priority" : 0
                              }
                            },
                            {
                              "ITask" : {
                                "name" : "T2",
                                "duration" : {
                                  "IConstant" : {
                                    "value" : 1.0
                                  }
                                },
                                "cost" : {
                                  "IConstant" : {
                                    "value" : 3.0
                                  }
                                },
                                "resources" : [
                                ],
                                "priority" : 0
                              }
                            }
                            ]       
                          }
                        },
                        "rate" : {
                          "IConstant" : {
                            "value" : 1.0
                          }
                        },
                        "limit" : 3
                      }
                    ],
                    "resources" : [
                    {
                      "name": "Resource",
                      "capacity": 2,
                      "costPerTick": 1.0
                    }
                    ]
                  } 
      responses:
        '200':
          description: "A list of simulation events in chunks."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
              examples:
                '0': 
                  value: |-
                    [{"EResourceAdd":{"source":"Server Scenario","time":0,"resource":{"name":"Resource","capacity":2,"costPerTick":1.0}}},{"EArrivalAdd":{"source":"Server Scenario","time":0,"name":"Example1","start":0,"limit":3}},{"EStart":{"source":"Server Scenario","time":0}},{"ECaseStart":{"source":"Server Scenario","time":0,"name":"Example1#1"}},{"ETaskAdd":{"source":"Server Scenario","time":0,"task":{"id":"2b7aade5-f291-4991-8d14-ee0f78c8e5a5","name":"T1","caseName":"Example1#1","created":0,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskStart":{"source":"Server Scenario","time":0,"task":{"id":"2b7aade5-f291-4991-8d14-ee0f78c8e5a5","name":"T1","caseName":"Example1#1","created":0,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskAttach":{"source":"Server Scenario","time":0,"task":{"id":"2b7aade5-f291-4991-8d14-ee0f78c8e5a5","name":"T1","caseName":"Example1#1","created":0,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0},"resource":{"resource":{"name":"Resource","capacity":2,"costPerTick":1.0},"currentTasks":[[0,{"id":"2b7aade5-f291-4991-8d14-ee0f78c8e5a5","name":"T1","caseName":"Example1#1","created":0,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}]]}}},{"ECaseStart":{"source":"Server Scenario","time":1,"name":"Example1#2"}},{"ETaskAdd":{"source":"Server Scenario","time":1,"task":{"id":"c2bd8eb6-a809-4178-aeb3-7f787e7dc49f","name":"T1","caseName":"Example1#2","created":1,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskStart":{"source":"Server Scenario","time":1,"task":{"id":"c2bd8eb6-a809-4178-aeb3-7f787e7dc49f","name":"T1","caseName":"Example1#2","created":1,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskAttach":{"source":"Server Scenario","time":1,"task":{"id":"c2bd8eb6-a809-4178-aeb3-7f787e7dc49f","name":"T1","caseName":"Example1#2","created":1,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0},"resource":{"resource":{"name":"Resource","capacity":2,"costPerTick":1.0},"currentTasks":[[0,{"id":"2b7aade5-f291-4991-8d14-ee0f78c8e5a5","name":"T1","caseName":"Example1#1","created":0,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}],[1,{"id":"c2bd8eb6-a809-4178-aeb3-7f787e7dc49f","name":"T1","caseName":"Example1#2","created":1,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}]]}}},{"ECaseStart":{"source":"Server Scenario","time":2,"name":"Example1#3"}},{"ETaskAdd":{"source":"Server Scenario","time":2,"task":{"id":"911890e0-10da-4daa-b8f2-e87a755d97ff","name":"T1","caseName":"Example1#3","created":2,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskDetach":{"source":"Server Scenario","time":5,"start":0,"task":{"id":"2b7aade5-f291-4991-8d14-ee0f78c8e5a5","name":"T1","caseName":"Example1#1","created":0,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0},"resource":{"resource":{"name":"Resource","capacity":2,"costPerTick":1.0},"currentTasks":[[1,{"id":"c2bd8eb6-a809-4178-aeb3-7f787e7dc49f","name":"T1","caseName":"Example1#2","created":1,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}]]}}},{"ETaskDone":{"source":"Server Scenario","time":5,"task":{"id":"2b7aade5-f291-4991-8d14-ee0f78c8e5a5","name":"T1","caseName":"Example1#1","created":0,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskAdd":{"source":"Server Scenario","time":5,"task":{"id":"c18c5bb2-58f0-47ff-8cef-cf83800581d7","name":"T2","caseName":"Example1#1","created":5,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ETaskStart":{"source":"Server Scenario","time":5,"task":{"id":"c18c5bb2-58f0-47ff-8cef-cf83800581d7","name":"T2","caseName":"Example1#1","created":5,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ETaskStart":{"source":"Server Scenario","time":5,"task":{"id":"911890e0-10da-4daa-b8f2-e87a755d97ff","name":"T1","caseName":"Example1#3","created":2,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskAttach":{"source":"Server Scenario","time":5,"task":{"id":"911890e0-10da-4daa-b8f2-e87a755d97ff","name":"T1","caseName":"Example1#3","created":2,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0},"resource":{"resource":{"name":"Resource","capacity":2,"costPerTick":1.0},"currentTasks":[[1,{"id":"c2bd8eb6-a809-4178-aeb3-7f787e7dc49f","name":"T1","caseName":"Example1#2","created":1,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}],[5,{"id":"911890e0-10da-4daa-b8f2-e87a755d97ff","name":"T1","caseName":"Example1#3","created":2,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}]]}}},{"ETaskDetach":{"source":"Server Scenario","time":6,"start":1,"task":{"id":"c2bd8eb6-a809-4178-aeb3-7f787e7dc49f","name":"T1","caseName":"Example1#2","created":1,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0},"resource":{"resource":{"name":"Resource","capacity":2,"costPerTick":1.0},"currentTasks":[[5,{"id":"911890e0-10da-4daa-b8f2-e87a755d97ff","name":"T1","caseName":"Example1#3","created":2,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}]]}}},{"ETaskDone":{"source":"Server Scenario","time":6,"task":{"id":"c2bd8eb6-a809-4178-aeb3-7f787e7dc49f","name":"T1","caseName":"Example1#2","created":1,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskDone":{"source":"Server Scenario","time":6,"task":{"id":"c18c5bb2-58f0-47ff-8cef-cf83800581d7","name":"T2","caseName":"Example1#1","created":5,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ETaskAdd":{"source":"Server Scenario","time":6,"task":{"id":"fb8970fb-13c8-426a-a7cc-665304e36fad","name":"T2","caseName":"Example1#2","created":6,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ETaskStart":{"source":"Server Scenario","time":6,"task":{"id":"fb8970fb-13c8-426a-a7cc-665304e36fad","name":"T2","caseName":"Example1#2","created":6,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ECaseEnd":{"source":"Server Scenario","time":6,"name":"Example1#1","result":"()"}},{"ETaskDone":{"source":"Server Scenario","time":7,"task":{"id":"fb8970fb-13c8-426a-a7cc-665304e36fad","name":"T2","caseName":"Example1#2","created":6,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ECaseEnd":{"source":"Server Scenario","time":7,"name":"Example1#2","result":"()"}},{"ETaskDetach":{"source":"Server Scenario","time":10,"start":5,"task":{"id":"911890e0-10da-4daa-b8f2-e87a755d97ff","name":"T1","caseName":"Example1#3","created":2,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0},"resource":{"resource":{"name":"Resource","capacity":2,"costPerTick":1.0},"currentTasks":[]}}},{"ETaskDone":{"source":"Server Scenario","time":10,"task":{"id":"911890e0-10da-4daa-b8f2-e87a755d97ff","name":"T1","caseName":"Example1#3","created":2,"minStartTime":0,"resources":{"Resource":1},"duration":5,"estimatedDuration":5,"cost":2.0,"interrupt":-1,"priority":0}}},{"ETaskAdd":{"source":"Server Scenario","time":10,"task":{"id":"9f7ac6dc-3279-4e85-8f72-9d4387b934a4","name":"T2","caseName":"Example1#3","created":10,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ETaskStart":{"source":"Server Scenario","time":10,"task":{"id":"9f7ac6dc-3279-4e85-8f72-9d4387b934a4","name":"T2","caseName":"Example1#3","created":10,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ETaskDone":{"source":"Server Scenario","time":11,"task":{"id":"9f7ac6dc-3279-4e85-8f72-9d4387b934a4","name":"T2","caseName":"Example1#3","created":10,"minStartTime":0,"resources":{},"duration":1,"estimatedDuration":1,"cost":3.0,"interrupt":-1,"priority":0}}},{"ECaseEnd":{"source":"Server Scenario","time":11,"name":"Example1#3","result":"()"}},{"EDone":{"source":"Server Scenario","time":11}}]
        '422':
          description: "Unpocessable Entity - Error in requested scenario"
          content:
            application/json:
              schema:
                type: string
                example: "Flow resources cannot be matched to the resource list."
components:
  schemas:
    IRequest:
      description: "A request for a simulation."
      required:
        - arrivals
        - resources
      type: object
      properties:
        arrivals:
          type: array
          items:
            $ref: '#/components/schemas/IArrival'
          description: "The arrivals of cases to simulate."
        resources:
          type: array
          items:
            $ref: '#/components/schemas/IResource'
          description: "The persistent resources to use."
        start: 
          type: integer
          format: int64
          description: "The initial timestamp when the simulation starts."
          default: 0
        timeLimit: 
          type: integer
          format: int64
          description: "The maximum timestamp after which the simulation should stop. A limit MUST be provided if at least one arrival is infinite."
    IArrival:
      description: "An object describing the arrival of cases in the simulation at a certain rate. If no rate is provided, then a single case is generated. Each case consists of a specified flow of tasks."
      required:
        - name
        - flow
      type: object
      properties:
        name: 
          type: string
          description: "A unique name for the arriving cases."
        flow:
          $ref: '#/components/schemas/IFlow'
        start: 
          type: integer
          format: int64
          description: "An optional starting time for the arrival of cases."
        rate:
          $ref: '#/components/schemas/IDistribution'
        limit:
          type: integer
          format: int32
          description: "An optional limit of how many cases to generate."
    IFlow:
      description: ""
      oneOf:
        - $ref: '#/components/schemas/IPar'
        - $ref: '#/components/schemas/IThen'
        - $ref: '#/components/schemas/ITask'
    IThen:
      description: "Execution of a list of flows in sequence."
      required:
        - args
      type: object
      properties:
        args:
          type: array
          items: 
            $ref: '#/components/schemas/IFlow'
      example: |
        "IThen": {
          args: [
            ITask: {...},
            ITask: {...}}
          ]
        }
    IPar:
      description: "Execution of a list of flows in parallel."
      required:
        - args
      type: object
      properties:
        args:
          type: array
          items: 
            $ref: '#/components/schemas/IFlow'
      example: |
        "IPar": {
          args: [
            ITask: {...},
            ITask: {...}}
          ]
        }
    ITask:
      description: "A simulated task."
      required:
        - name
        - duration
        - cost
        - resources
        - priority
      type: object
      properties:
        name:
          type: string
          description: "A name for the task. Must be unique compared to other tasks in the same flow."
        duration:
          $ref: '#/components/schemas/IDistribution'
        cost:
          $ref: '#/components/schemas/IDistribution'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/IRequiredResource'
          description: "The resources required for this task."
        priority:
          type: integer
          format: int32
          description: "The priority of this task relatively to all other tasks."
      example: |
        {
          name: "Some Task",
          duration:
            "IUniform": {
              "from": 3.0,
              "to": 5.0
            },
          cost: 
            "IConstant": {
              "value": 10.0
            }, 
          resources: [{
            resource: "Some Resource",
            quantity: 1
            }],
          priority: 3
        }
    IResource:
      description: "A persistent resource."
      required:
        - name
        - capacity
        - costPerTick
      type: object
      properties:
        name:
          type: string
          description: "A unique name for the resource."
        capacity:
          type: integer
          format: int32
          minimum: 1
          description: "The capacity of the resource."
        costPerTick:
          type: number
          format: double
          minimum: 0.0
          description: "The cost of using the resource per unit of time (tick)."
      example:
        name: "Some Resource"
        capacity: 5
        costPerTick: 4.5
    IRequiredResource:
      description: "A resource requirement for a task."
      required:
        - resource
        - quantity
      type: object
      properties:
        resource:
          type: string
          description: "The name of the required resource."
        quantity:
          type: integer
          format: int32
          minimum: 1
          description: "The quantity (part of the capacity) of the resource required."
      example:
        resource: "Some Resource"
        quantity: 1
    IDistribution:
      description: "A probability distribution to produce the required value. Can either be constant, exponential, or uniform."
      oneOf:
        - $ref: '#/components/schemas/IConstant'
        - $ref: '#/components/schemas/IExp'
        - $ref: '#/components/schemas/IUniform'
    IConstant:
      description: "A distribution that produces a constant number."
      required:
        - IConstant
      type: object
      properties:
        IConstant:
          type: object
          required: 
            - value
          properties:
            value:
              type: number
              format: double
              description: "The constant number to be produced."
      example: |
        "IConstant": {
          "value": 3.0
        }
    IExp:
      description: "An exponential probability distribution."
      required:
        - IExp
      type: object
      properties:
        IExp:
          type: object
          required: 
            - value
          properties:
            value:
              type: number
              format: double
              description: "The mean (lambda) value of the exponential distribution."
      example: |
        "IExp": {
          "value": 3.0
        }
    IUniform:
      description: "A uniform probability distribution between 2 numbers."
      required:
        - IUniform
      type: object
      properties:
        IUniform:
          type: object
          required: 
            - from
            - to
          properties:
            from:
              description: "The start of the uniform range of values."
              type: number
              format: double
            to:
              description: "The end of the uniform range of values."
              type: number
              format: double
      example: |
        "IUniform": {
          "from": 2.0,
          "to": 10.0
        }
    Metrics:
      description: "Metrics related to the entire simulation."
      type: object
      properties:
        startTime:
          description: "The system time in milliseconds when the simulation started (null if it never did)."
          type: integer
          format: int64
          nullable: true          
        endTime:
          description: "The system time in milliseconds when the simulation ended (null if it never did)."   
          type: integer
          format: int64
          nullable: true   
        startTicks:
          description: "The starting simulation time."
          type: integer
          format: int64
        endTicks:
          description: "The final simulation time."
          type: integer
          format: int64
        tasks:
          description: "An array of task metrics, indexed by task UUID."
          type: array
          items:
            $ref: '#/components/schemas/TaskMetrics'
        cases:
          description: "An array case metrics, indexed by case name."
          type: array
          items:
            $ref: '#/components/schemas/CaseMetrics'
        resources:
          description: "An array of resource metrics, indexed by resource name."
          type: array
          items:
            $ref: '#/components/schemas/ResourceMetrics'
        errors:
          description: "Errors that occurred during metrics measurement."
          type: array
          items:
            $ref: '#/components/schemas/MetricsException'
    TaskMetrics:
      description: "Metrics related to individual tasks."
      type: object
      properties:
        id:
          description: "The UUID of the task."
          type: string
          format: uuid
        task:
          description: "The name of the task."
          type: string
        caseName:
          description: "The name of the case to which the task belongs."
          type: string
        priority:
          description: "The numerical priority of the task."
          type: integer
          format: int32
        created:
          description: "The time when the task was created/added."
          type: integer
          format: int64
        started:
          description: "The time when the task was started or null if it never started."
          type: integer
          format: int64
          nullable: true
        duration:
          description: "The actual duration of the task from start to end."
          type: integer
          format: int64
        cost:
          description: "The total cost of the task, including resource costs."
          type: number
          format: double
        resources:
          description: "An array of resource names and corresponding capacities used."
          type: object
          additionalProperties:
            type: integer
            format: int32
        aborted:
          description: "A flag that is true if the task was aborted and false otherwise."
          type: boolean
    CaseMetrics:
      description: "Metrics related to individual cases."
      type: object
      properties:
        name:
          description: "The name of the case."
          type: string
        started:
          description: "The time when the case started."
          type: integer
          format: int64
        duration:
          description: "The total duration of the case."
          type: integer
          format: int64        
        delay:
          description: "The total duration of delays (difference between created and start time) of all the tasks in this case."
          type: integer
          format: int64    
        tasks:
          description: "The total number of tasks associated with the case."
          type: integer
          format: int32
        cost:
          description: "The total cost of the all tasks of the case, including resource costs."
          type: number
          format: double
        result:
          description: "The final output generated when the case completes."
          type: string
          nullable: true
    ResourceMetrics:
      description: "Metrics related to individual resources."
      type: object
      properties:
        name:
          description: "The name of the resource."
          type: string
        capacity:
          description: "The total capacity of the resource."
          type: integer
          format: int32
        costPerTick:
          description: "The cost of using the resource per unit of time (tick)."
          type: number
          format: double
        idleUpdate:
          description: "Internal variable to calculate idle time."
          type: integer
          format: int64
        load:
          description: "Internal variable to calculate idle time."
          type: integer
          format: int32
        busyTime:
          description: "The total time the resource was busy multiplied per unit of capacity that was used."
          type: integer
          format: int64
        idleTime:
          description: "The total time the resource was idle multiplied per unit of capacity that was unused."
          type: integer
          format: int64
        tasks:
          description: "The total number of tasks that were attached to this resource."
          type: integer
          format: int32
        cost:
          description: "The total running cost of the resource."
          type: number
          format: double
    MetricsException:
      description: "Error thrown when encountering simulation events for an unknown object."
      oneOf:
        - $ref: '#/components/schemas/TaskNotFound'
        - $ref: '#/components/schemas/CaseNotFound'
        - $ref: '#/components/schemas/ResourceNotFound'
    TaskNotFound:
      description: "Encountered simulation events for an unknown task."
      type: object
      properties:
        taskId:
          description: "The UUID of the task."
          type: string
          format: uuid
    CaseNotFound:
      description: "Encountered simulation events for an unknown case."
      type: object
      properties:
        caseName:
          description: "The name of the case."
          type: string
    ResourceNotFound:
      description: "Encountered simulation events for an unknown resource."
      type: object
      properties:
        resourceName:
          description: "The name of the resource."
          type: string
    Event:
      oneOf:
        - $ref: '#/components/schemas/EStart'
        - $ref: '#/components/schemas/EDone'
        - $ref: '#/components/schemas/ETimeLimit'
        - $ref: '#/components/schemas/EResourceAdd'
        - $ref: '#/components/schemas/ECaseAdd'
        - $ref: '#/components/schemas/EArrivalAdd'
        - $ref: '#/components/schemas/ECaseStart'
        - $ref: '#/components/schemas/ECaseEnd'
        - $ref: '#/components/schemas/ETaskAdd'
        - $ref: '#/components/schemas/ETaskStart'
        - $ref: '#/components/schemas/ETaskAttach'
        - $ref: '#/components/schemas/ETaskDetach'
        - $ref: '#/components/schemas/ETaskDone'
        - $ref: '#/components/schemas/ETaskAbort'
        - $ref: '#/components/schemas/EError'
    BasicEvent:
      type: object
      properties:
        source:
          description: "A name given to the simulation scenario."
          default: "Server Scenario"
          type: string
        time:
          description: "The simulation time when the event occurred."
          type: integer
          format: int64
    EStart:
      description: "The simulation started."
      type: object
      properties:
        EStart:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
    EDone:
      description: "The simulation finished."
      type: object
      properties:
        EDone:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
    EError:
      description: "An error occurred during simulation."
      type: object
      properties:
        EError:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: string
              description: "A description of the error."
    ETimeLimit:
      description: "A time limit was set."
      type: object
      properties:
        ETimeLimit:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                limit:
                  description: "The time limit in time units (ticks)."
                  type: integer
                  format: int64
    EResourceAdd:
      description: "A resource was added."
      type: object
      properties:
        EResourceAdd:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                limit:
                  $ref: '#/components/schemas/IResource'
    ECaseAdd:
      description: "A case instance was added."
      type: object
      properties:
        ECaseAdd:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                name:
                  description: "The unique name of the case instance."
                  type: string
                start:
                  description: "The timestamp when the case is scheduled to start."
                  type: integer
                  format: int64
    EArrivalAdd:
      description: "An arrival was added."
      type: object
      properties:
        EArrivalAdd:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                name:
                  description: "The name of the arriving cases."
                  type: string
                start:
                  description: "The timestamp when arrivals are scheduled to start."
                  type: integer
                  format: int64
                limit:
                  description: "An optional limit of the number of cases that will be generated."
                  type: integer
                  format: int32
                  nullable: true
    ECaseStart:
      description: "A case instance was started."
      type: object
      properties:
        ECaseStart:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                name:
                  description: "The unique name of the case instance."
                  type: string
    ECaseEnd:
      description: "A case instance was started."
      type: object
      properties:
        ECaseEnd:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                name:
                  description: "The unique name of the case instance."
                  type: string
                result:
                  description: "The resulting output of the case."
                  type: string
    ETaskAdd:
      description: "A task instance was added in the queue."
      type: object
      properties:
        ETaskAdd:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                task:
                  $ref: '#/components/schemas/TaskInstance'
    ETaskStart:
      description: "A task instance was started."
      type: object
      properties:
        ETaskStart:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                task:
                  $ref: '#/components/schemas/TaskInstance'
    ETaskAttach:
      description: "A task instance was attached to a resource."
      type: object
      properties:
        ETaskAttach:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                task:
                  $ref: '#/components/schemas/TaskInstance'
                resource:
                  $ref: '#/components/schemas/ResourceState'
    ETaskDetach:
      description: "A task instance was detached from a resource."
      type: object
      properties:
        ETaskDetach:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                start:
                  description: "The timestamp when the task was attached."
                  type: integer
                  format: int64
                task:
                  $ref: '#/components/schemas/TaskInstance'
                resource:
                  $ref: '#/components/schemas/ResourceState'
    ETaskDone:
      description: "A task instance was completed."
      type: object
      properties:
        ETaskDone:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                task:
                  $ref: '#/components/schemas/TaskInstance'
    ETaskAbort:
      description: "A task instance was aborted."
      type: object
      properties:
        ETaskAbort:
          allOf:
            - $ref: '#/components/schemas/BasicEvent'
            - type: object
              properties:
                id:
                  description: "The UUID of the task instance."
                  type: string
                  format: uuid
    TaskInstance:
      description: "An instance of a task."
      type: object
      properties:
        id:
          description: "The UUID of the task instance."
          type: string
          format: uuid
        name:
          description: "The name of the task."
          type: string
        caseName:
          description: "The name of the corresponding case."
          type: string
        created:
          description: "The timestamp when the instance was created."
          type: integer
          format: int64
        minStartTime:
          description: "The minimum time when the task can start."
          type: integer
          format: int64
          default: 0
        resources:
          description: "An array of resource names and corresponding capacities required."
          type: object
          additionalProperties:
            type: integer
            format: int32
        duration:
          description: "The actual duration of the task instance."
          type: integer
          format: int64
        estimatedDuration:
          description: "The a-priori estimated duration of the task instance."
          type: integer
          format: int64
        cost:
          description: "The cost of the task (excluding resource costs)."
          type: number
          format: double
        interrupt:
          description: "(unused)"
          type: integer
          format: int32
          default: -1
        priority:
          description: "The relevant priority of this task."
          type: integer
          format: int32
    ResourceState:
        description: "A description of the current state of a resource."
        type: object
        properties:
          resource:
            $ref: '#/components/schemas/IResource'
          currentTasks:
            description: "A list of currently attached tasks and their starting times."
            type: array
            items:
              type: array
              minItems: 2
              maxItems: 2
              items:
                oneOf:
                  - type: integer
                    format: int64
                    description: "The starting time of the task."
                  - $ref: '#/components/schemas/TaskInstance'